version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - echo Starting sample app build process 
  pre_build:
    commands:
    - echo "configure git user ..."
    - git config user.email "a2838k@gmail.com"  # Corrected typo
    - git config user.name "ankit"
    - git config credential.helper '!aws codecommit credential-helper $@'
    - git config credential.UseHttpPath true
    - echo check config 
    - echo check kubectl access
    - echo Logging in to Amazon ECR...
    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - echo "implementing the image version in deployment.yaml"
  build:
    commands:
      - echo Building the Docker image.
      - version_line=$(grep "version:" update.txt )
      - version=${version_line##*:} 
      - echo "separating the values "
      - IFS='.' read -r major minor patch <<< "$version"
      - echo "major:$major"
      - echo "minor:$minor"
      - echo "patch:$patch"
      - patch=$((patch + 1))
      - echo "patch:$patch"
      - NEW_VERSION=$major:$minor:$patch
      - echo "new_version:$NEW_VERSION"
      - echo "current_version:$version"
      - sed -i "s/version:.*/version:$NEW_VERSION/" update.txt
      - sed -i "s|image:.*|image:\busybox:${NEW_VERSION}|" deployment.yaml
  
  post_build:
    commands:
      - echo "to push the changes "
      - git checkout master
      - git add update.txt
      - git commit -m "adding the files"
      - git push origin master
      - 